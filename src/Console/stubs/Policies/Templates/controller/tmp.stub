<?php

namespace App\Http\Controllers\Admin;

use App\Models\==Model==;
use Illuminate\Http\Request;
use Ml\Response\Result;

class ==ControllerName== extends BaseController
{

    /**
     * 字段
     *
     * @var array
     */
    private $fields = ==Fields==;

    /**
     * 数据字典
     *
     * @var array
     */
    private $fieldsMap = ==FieldsMap==;

    /**
     * 列表
     *
     * @param Request $request
     * @param ==Model== $==modelVar==
     * @return mixed
     */
    public function index(Request $request, ==Model== $==modelVar==)
    {
        return $this->backend_view('==folder==.index');
    }

    /**
     *
     * @param Request $request
     * @param Result $result
     * @return array
     */
    public function list(Request $request, Result $result)
    {
        $query = ==Model==::query();

        //查询条件处理
        if ($queryFields = $request->get('queryFields')) {
            foreach ($queryFields as $field => $value) {
                $query = $query->where($field, $value);
            }
        }

        //每页数量
        $per_page = $request->get('limit') ? $request->get('limit') : config('admin.paginate.limit');
        if ($per_page > 100) {
            //限制最大100
            $per_page = 100;
        }
        $query = $query->orderBy('id', 'desc');
        $data = $query->paginate($per_page);
        $data->withPath($request->fullUrl());
        $result->succeed($data);

        return $result->toArray();
    }

    /**
     * 新增页面
     * @param ==Model== $==modelVar==
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function create(==Model== $==modelVar==)
    {

        return $this->backend_view('==folder==.create_edit', compact('==modelVar=='));
    }

    /**
     * 添加
     * @param Request $request
     * @param Result $result
     * @return array
     */
    public function store(Request $request, Result $result)
    {
        try {
            $model = ==Model==::create($request->only($this->fields));
            $result->succeed($model);
        } catch (\Exception $exception) {
            $result->failed($exception->getMessage());
        }

        return $result->toArray();

    }

    /**
     * 编辑
     *
     * @param ==Model== $==modelVar==
     * @return mixed
     */
    public function edit(==Model== $==modelVar==)
    {

        return $this->backend_view('==folder==.create_edit', compact('==modelVar=='));
    }

    /**
     * 更新
     *
     * @param Request $request
     * @param ==Model== $==modelVar==
     * @param Result $result
     * @return array
     */
    public function update(Request $request, ==Model== $==modelVar==, Result $result)
    {
        $==modelVar==->update($request->only($this->fields));
        $result->succeed($==modelVar==);

        return $result->toArray();
    }

    /**
     * 删除
     *
     * @param ==Model== $==modelVar==
     * @param Result $result
     * @return array
     * @throws \Exception
     */
    public function destroy(==Model== $==modelVar==, Result $result)
    {
        if (!$==modelVar==) {
            $result->failed('已删除或不存在');
        } else {
            //执行删除
            $del = $==modelVar==->delete();
            if ($del) {
                $result->succeed($==modelVar==);
            } else {
                $result->failed('删除失败');
            }
        }

        return $result->toArray();
    }


    /**
     * 批量删除
     * @param Request $request
     * @param Result $result
     * @return array
     */
    public function destroyBat(Request $request, Result $result)
    {
        $ids = $request->get('ids');
        if ($ids && is_array($ids)) {
            $dels = ==Model==::whereIn('id', $ids)->delete();
            if ($dels > 0) {
                $result->succeed();
            } else {
                $result->failed('删除失败');
            }
        } else {
            $result->failed('参数错误');
        }

        return $result->toArray();
    }

//## 路由：==Model==
//$router->get('==folder==', '==ControllerName==@index')->name('admin.==folder==');
//$router->get('==folder==/create', '==ControllerName==@create')->name('admin.==folder==.create');
//$router->get('==folder==/list', '==ControllerName==@list')->name('admin.==folder==.list');
//$router->post('==folder==/store', '==ControllerName==@store')->name('admin.==folder==.store');
//$router->get('==folder==/edit/{==modelVar==}', '==ControllerName==@edit')->name('admin.==folder==.edit');//隐式绑定
//$router->post('==folder==/update/{==modelVar==}', '==ControllerName==@update')->name('admin.==folder==.update');//隐式绑定
//$router->get('==folder==/destroy/{==modelVar==}', '==ControllerName==@destroy')->name('admin.==folder==.destroy');//隐式绑定
//$router->post('==folder==/destroyBat', '==ControllerName==@destroyBat')->name('admin.==folder==.destroyBat');

}
